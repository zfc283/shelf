<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.shelf.mapper.MyEbookSnapshotMapper">
    <update id="updateEbookSnapshotInfo">
        CREATE TEMPORARY TABLE temp_ebook_ids AS
        SELECT ebook_id FROM ebook_snapshot
        WHERE ebook_id NOT IN (SELECT id FROM ebook);

        DELETE FROM ebook_snapshot
        WHERE ebook_id IN (SELECT ebook_id FROM temp_ebook_ids)
            AND `date` = CURDATE();

        DROP TEMPORARY TABLE temp_ebook_ids;

        insert into ebook_snapshot(ebook_id, `date`, view_count, vote_count, view_increase, vote_increase)
        select id, curdate(), 0, 0, 0, 0
        from ebook t1
        where not exists (select 1
                          from ebook_snapshot t2
                          where t2.ebook_id = t1.id and `date` = curdate());

        update ebook_snapshot t1, ebook t2
        set t1.view_count = t2.view_count, t1.vote_count = t2.vote_count
        where t1.ebook_id = t2.id and `date` = curdate();

        update ebook_snapshot t1 left join (select ebook_id, view_count, vote_count from ebook_snapshot where `date` = date_sub(curdate(), interval 1 day)) t2
            on t1.ebook_id = t2.ebook_id
        set t1.view_increase = t1.view_count - ifnull(t2.view_count, 0),
            t1.vote_increase = t1.vote_count - ifnull(t2.vote_count, 0)
        where t1.`date` = curdate();
    </update>

    <select id="getStatistics" resultType="com.project.shelf.resp.StatisticsResp">
        select `date` as date, sum(view_count) as viewCount, sum(vote_count) as voteCount, sum(view_increase) as viewIncrease, sum(vote_increase) as voteIncrease
        from ebook_snapshot
        where `date` >= date_sub(curdate(), interval 1 day)
        group by `date`
        order by `date`
    </select>

    <select id="getStatistics30" resultType="com.project.shelf.resp.StatisticsResp">
        select `date` as date, sum(view_increase) as viewIncrease, sum(vote_increase) as voteIncrease
        from ebook_snapshot
        where `date` between date_sub(curdate(), interval 30 day) and date_sub(curdate(), interval 1 day)
        group by `date`
        order by `date`
    </select>
</mapper>